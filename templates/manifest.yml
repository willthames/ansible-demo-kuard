apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
  labels:
    {{ kube_deployment_labels | to_nice_yaml(indent=2) | indent(4) }}
spec:
  replicas: {{ kube_deployment_replicas }}
  selector:
    matchLabels:
      {{ kube_resource_labels | to_nice_yaml(indent=2) | indent(6) }}
  template:
    metadata:
      labels:
        {{ kube_resource_labels | to_nice_yaml(indent=2) | indent(8) }}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: {{ kube_resource_name }}
          image: {{ image_registry|ternary(image_registry + "/", "") }}{{ image_name }}:{{ image_tag }}
          imagePullPolicy: {{ image_pull_policy }}
          ports:
            - containerPort: {{ kube_service_backend_port }}
              name: http
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: {{ (kube_resource_configmaps['env-configmap']) | k8s_config_resource_name }}
            - secretRef:
                name: {{ (kube_resource_secrets['env-secrets']) | k8s_config_resource_name }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ kube_service_backend_port }}
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
  labels:
    {{ kube_resource_labels | to_nice_yaml(indent=2) | indent(4) }}
spec:
  ports:
  - port: {{ kube_service_port }}
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{ kube_resource_labels | to_nice_yaml(indent=2) | indent(4) }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
spec:
  rules:
  - host: {{ kube_resource_fqdn }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ kube_resource_name }}
          servicePort: http
